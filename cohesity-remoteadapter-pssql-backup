#!/bin/bash

##
#
# This is example script to use Cohesity Remote Adapter feature to backup PostgreSQL databases
#
##

trap "exit 1" HUP INT TERM
PATH=/sbin:/bin:/usr/sbin:/usr/bin

BACKUP_DIR=/backup
LOG_DIR="$BACKUP_DIR/log"
TODAY=$(date +"%m-%d-%Y")
PSSQLDUMP="$(which pg_dumpall)"
GZIP="$(which gzip)"
PSSQL="$(which pssql)"
PSSQL_USER="username"
PGPASSWORD='password'
PSSQL_HOST="localhost"
NFS_MOUNT=("/mnt/cohesity1" "/mnt/cohesity2" "/mnt/cohesity3" "/mnt/cohesity4")
SPLIT_SIZE=4
BACKUP_RETAIN_DAYS=7
SKIPDATABASES="Database|otherdbtoskip|dontbackup"

echo "Starting backup...."

# Create directory for todays backup and logs
mkdir -p $BACKUP_DIR/$TODAY
mkdir -p $LOG_DIR/$TODAY

if [ -d $BACKUP_DIR/$TODAY ]; then

        # Get all database list first
        DBS=$($PSSQL -l | awk '{ print $1}' | grep -vE '^-|^List|^Name|template[0|1]' | grep -Ev "($SKIPDATABASES)")
        
        if [ "$DBS" == "" ] 
        then
                echo "ERROR! No DBs to protect found. Please check MySQL status!"
                exit 1
        else
                echo "Found DBs to backup: $DBS"
                
                for db in $DBS
                do
                        echo "Dumping DB $db"
                        mkdir -p $BACKUP_DIR/$TODAY/$db
                        $PSSQLDUMP -Fp -U $PSSQL_USER -h $PSSQL_HOST $db | $GZIP -9 > $BACKUP_DIR/$TODAY/$db/$db.dump.gz
                done
        fi
fi

# Find backups to transaction log and split logs to size of $SPLIT_SIZE

find $BACKUP_DIR/$TODAY/* -type d > $LOG_DIR/$TODAY/transaction.log
touch $LOG_DIR/$TODAY/rsync.log

cd $LOG_DIR/$TODAY
split -l$SPLIT_SIZE -d $LOG_DIR/$TODAY/transaction.log folders_part

echo "Building rsync job:"
# Build rsync job
for files in `ls -B $LOG_DIR/$TODAY/folders_part*`
do
    TARGET_NFS=${NFS_MOUNT[RANDOM%${#NFS_MOUNT[@]}]}
    echo "rsync -avzm --relative --stats --safe-links --ignore-existing --human-readable \`cat $files\`  $TARGET_NFS"
    echo "rsync -avzm --relative --stats --safe-links --ignore-existing --human-readable \`cat $files\`  $TARGET_NFS" >> $LOG_DIR/$TODAY/runjob.sh
done

echo "Running rsync job...."
. $LOG_DIR/$TODAY/runjob.sh

TARGET_NFS=${NFS_MOUNT[RANDOM%${#NFS_MOUNT[@]}]}
DIRS_SOURCE=$(ls -b $BACKUP_DIR/$TODAY | wc -l)
DIRS_DEST=$(ls -b $TARGET_NFS$BACKUP_DIR/$TODAY | wc -l)

if [ $DIRS_DEST != $DIRS_SOURCE ]
then
        echo "Failed to copy all backups to destination. Check status!"
        exit 1
else
        echo "Copied $DIRS_SOURCE backups to Cohesity view"
fi

# Remove old backups from view
DBDELDATE=`date +"%m-%d-%Y" --date="${BACKUP_RETAIN_DAYS} days ago"`

if [ ! -z ${BACKUP_DIR} ]; then
      cd ${BACKUP_DIR}
      if [ ! -z ${DBDELDATE} ] && [ -d ${DBDELDATE} ]; then
            rm -rf ${DBDELDATE}
      fi
fi 

exit 0
